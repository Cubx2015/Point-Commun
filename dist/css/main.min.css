#footer{padding-top:50px;padding-bottom:50px;background-color:#343642}#footer ul.icons{text-align:center;cursor:default;padding-left:0;list-style:none}#footer ul.icons li{text-align:center;display:inline-block}#footer ul.icons .icon{position:relative;width:2.586rem;height:auto;display:inline;text-decoration:none;border-bottom:none}.user-photo{display:block;margin:0 auto;width:10vw;height:auto;text-align:center;border:.39em solid #fff}.user-photo+p.lead{transition:margin-top .55s}#article2 .user-photo{margin-top:1.6996887em;width:15vw}#article2 .inner{width:80%;margin:0 auto;padding-bottom:1.5364em;height:100%}#article3 .inner{width:80%}#article1,#article2{background-size:3%;background-image:url(../static/media/grid.768ca57f.png);background-repeat:repeat;background-color:#3d3d3d;background-attachment:fixed}#sponsor{background-color:#fff}#sponsor .carousel{position:relative;height:5.5vw;max-width:100vw;margin:0 auto}#sponsor .carousel .flickity-viewport{transition:height .2s}#sponsor .carousel .flickity-viewport .logo-sponsor{top:50%;height:100%;display:block;-webkit-transform:translateY(-50%);transform:translateY(-50%)}#sponsor p{color:#979b9b;font-size:1.2rem}#article1{margin:0;padding:5em}#article1 h3{font-size:2.9em}#article1 h3,#article1 p.lead{text-align:center}#article1 .img-illustration{display:block;height:auto;width:30vw;margin:4vh auto 0}#article1 .underline:after{display:block;width:100px;height:3px;background:#919bac;content:"";margin:13px auto 0}#article2{margin:0;padding:0;width:100%}#article2 h3{font-size:2.9em;text-align:center}#article2 #wave{bottom:0;width:100%}#tab .tab-content{display:none;position:relative;z-index:3;padding:20px;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);background-color:#fff;margin-bottom:20px}#tab .tab-content.active{display:block}#tab .tabs:after{display:table;content:" ";clear:both}#tab .tabs a{display:inline-block;text-align:center;background-color:#eee;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);padding:10px 15px}#tab .tabs .active a{text-align:center;background-color:#fff;color:#348798}#tab li{float:left;display:block}#tab li,#tab ul{margin:0;padding:0;list-style:none}#article3{margin:0}#article3 p{font-size:1.2rem}#article3 h3{color:#979b9b}.navbar{transition:background .3s}.navbar.bg-active{background-color:#86aa64}#img1,#img2{border-radius:0;height:100vh;background-position:50%;background-size:cover;background-image:url(https://picsum.photos/1280/720/?random=);background-attachment:fixed;background-color:#4bb3d2}#img1:before,#img2:before{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-color:rgba(43,43,43,.5);height:100%}#img1 .display-2,#img1 .display-3,#img1 .display-4,#img1 .lead{color:#f2e9cf}#img1 .arrowLinkBottom{margin:0 auto;bottom:0;position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);text-align:center}#img1 a{text-align:center;text-transform:uppercase;margin-bottom:0}#img1 a,#img1 a:hover{text-decoration:none}#img2{position:relative;padding:0;margin:0;height:75vh;background-attachment:fixed}#img2 #arrow-down{top:0;padding:0;margin-top:0;height:100px;width:100%}.user-photo{transition:opacity .23s cubic-bezier(0,1,.33,1.28),-webkit-transform .23s cubic-bezier(0,1,.33,1.28);transition:transform .23s cubic-bezier(0,1,.33,1.28),opacity .23s cubic-bezier(0,1,.33,1.28);transition:transform .23s cubic-bezier(0,1,.33,1.28),opacity .23s cubic-bezier(0,1,.33,1.28),-webkit-transform .23s cubic-bezier(0,1,.33,1.28)}.user-photo:active,.user-photo:hover{border:none;-webkit-transform:scale(1.2);transform:scale(1.2)}.user-photo:active+p.lead,.user-photo:hover+p.lead{margin-top:.2987em}a,a:focus,a:hover{text-decoration:none;color:inherit}.inner{position:relative;margin:0 auto;width:100%;text-align:center}::selection{color:#343642;background-color:#86aa64;text-shadow:none}::-moz-selection{color:#343642;background-color:#86aa64;text-shadow:none}::-ms-selection{color:#343642;background-color:#86aa64;text-shadow:none}::-o-selection{color:#343642;background-color:#86aa64;text-shadow:none}
/*# sourceMappingURL=data:application/json;base64, */