@import url(https://fonts.googleapis.com/css?family=Ubuntu);body{font-family:Ubuntu,sans-serif}.logo-sponsor{height:100%;max-width:100%;display:block;margin-right:10px}#flickity>.inner{width:100%;max-width:980px;margin:0 auto;padding:0}#img1{border-radius:0;height:100vh;background-position:50%;background-size:cover;background-image:url(https://picsum.photos/g/1280/720/?random=);background-color:#334d5c}#img1 .inner{text-align:center;color:#f5f5f5;position:relative;margin:0 auto;width:100%}#article1{height:100%;width:100%;background-size:3%;background-image:url(../static/media/grid.768ca57f.768ca57f.png);background-repeat:repeat;background-color:#334d5c}#article1>.inner{width:80%;margin:0 auto}#article1>.inner #one{background-color:rgba(43,43,43,.2)}#article1>.inner #three,#article1>.inner #two{background-color:rgba(56,56,56,.2)}#article1>.inner #four{background-color:rgba(43,43,43,.2)}ul.icons li{text-align:center;display:inline-block}ul.icons{text-align:center;cursor:default;padding-left:0;list-style:none}.icon{position:relative;width:2.586rem;height:auto;display:inline;text-decoration:none;border-bottom:none}#footer{padding-top:50px;padding-bottom:50px}.arrowLinkBottom{margin:0 auto;bottom:0;position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);text-align:center}.arrowLinkBottom a,.arrowLinkBottom p{text-transform:uppercase;margin-bottom:0}.arrowLinkBottom a,.arrowLinkBottom a:hover,.arrowLinkBottom p,.arrowLinkBottom p:hover{text-align:center;text-decoration:none}
/*# sourceMappingURL=data:application/json;base64, */